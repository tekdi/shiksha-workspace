name: Deploy to EKS-QA pratham-ms
on:
  workflow_dispatch:
env:
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
  EKS_CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME_QA }}
  AWS_REGION: ${{ secrets.AWS_REGION_NAME }}
jobs:
  build_QA:
    name: Deployment
    runs-on: ubuntu-latest
    steps:
    - name: Set short git commit SHA
      id: commit
      uses: prompt/actions-commit-hash@v2
    - name: Check out code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0 
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{env.AWS_REGION}}
    - name: Setup Node Env
      uses: actions/setup-node@v3
      with:
        node-version: 21.1.0
    - name: Copy .env file
      env:
       ENV_FILE_CONTENT: ${{ secrets.ENV_FILE_CONTENT_QA }}
      run: printf "%s" "$ENV_FILE_CONTENT" > manifest/configmap.yaml 
    - name: Show PWD and list content and Latest 3 commits 
      run: |
           echo "Fetching all branches to ensure complete history"
           git fetch --all
           echo "Checking out the current branch"
           git checkout ${{ github.ref_name }}
           echo "Git Branch cloned"
           git branch
           echo "Current 3 merge commits are:"
           git log --merges -n 3
           pwd
           ls -ltra
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ secrets.ECR_REPOSITORY }}
        IMAGE_TAG: ${{ secrets.ECR_IMAGE }}
      run: |
        docker build -t ${{ secrets.ECR_REPOSITORY }}:${{ secrets.IMAGE_TAG_QA }} .
        docker push ${{ secrets.ECR_REPOSITORY }}:${{ secrets.IMAGE_TAG_QA }}
    - name: Update kube config
      run: aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME_QA }} --region ${{ secrets.AWS_REGION_NAME }}
    - name: Deploy to EKS
      env:
        ECR_REGISTRY: ${{ secrets.ECR_REPOSITORY }}
        IMAGE_TAG: ${{ secrets.IMAGE_TAG_QA }}
        ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        ECR_IMAGE: ${{ secrets.ECR_IMAGE_QA }}
      run: |
        export ECR_REPOSITORY=${{ secrets.ECR_REPOSITORY }}
        export IMAGE_TAG=${{ secrets.IMAGE_TAG_QA }}
        export ECR_IMAGE=${{ secrets.ECR_IMAGE_QA }}
        envsubst < manifest/workspace.yaml > manifest/workspace-updated.yaml
        cat manifest/workspace-updated.yaml
        rm -rf manifest/workspace-service.yaml
        kubectl delete deployment shiksha-workspace
        kubectl delete service shiksha-workspace
        kubectl delete cm workspace-service-config
        kubectl apply -f manifest/workspace-updated.yaml
        kubectl apply -f manifest/configmap.yaml
        sleep 10
        kubectl get pods
        kubectl get services
        kubectl get deployment 
